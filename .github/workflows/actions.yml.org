name: Build

on:
  - push

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./generate.sh
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn --batch-mode package
      - name: Archive JAR
        uses: actions/upload-artifact@v3
        with:
          name: rfq-server.jar
          path: target/*.jar
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: rfq-server
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: target/*.jar


#
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ghcr.io/predic8/rfq-server
#          flavor: latest=true
#          tags: |
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#      - name: Set up Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#      - run: echo "AZ ${{ secrets.AZURE_PASSWORD }}"
#      - uses: azure/login@v1
#        with:
##          creds: ${{ secrets.AZURE_PASSWORD }}
##            - uses: Azure/login@v1
#          creds: '{"clientId":"${{ secrets.AZURE_APP_ID }}","clientSecret":"${{ secrets.AZURE_PASSWORD }}","subscriptionId":"${{ secrets.AZ_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT }}"}'
#      - run: |
#          az webapp list --query "[?state=='Running']"
#          az appservice plan create --name small -g demo --is-linux --sku B1 --location eastus
#          sleep 10
#          tag=1
#          az webapp delete -n "rfq-server" -g demo
#          az webapp create -g demo -p small -n "rfq-server" -i "$CI_REGISTRY_IMAGE:${tag}" -w $CI_DEPLOY_PASSWORD -s $CI_DEPLOY_USER --public-network-access Enabled --debug
#          az webapp config appsettings set --resource-group demo --name "rfq-server" --settings WEBSITES_PORT=8080
#
## az login --service-principal -u $AZURE_APP_ID -p $AZURE_PASSWORD --tenant $AZURE_TENANT